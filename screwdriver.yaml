shared:
    environment:
        DOCKER_REPO: screwdrivercd/launcher
        GO111MODULE: on
jobs:
    main:
        image: golang:1.17
        environment:
            SD_SONAR_OPTS: "-Dsonar.sources=./ -Dsonar.exclusions=**/*_test.go,**/vendor/** -Dsonar.tests=./ -Dsonar.test.inclusions=**/*_test.go -Dsonar.test.exclusions=**/vendor/** -Dsonar.go.coverage.reportPaths=${SD_ARTIFACTS_DIR}/coverage.out -Dsonar.go.tests.reportPaths=${SD_ARTIFACTS_DIR}/report.json"
        requires: [~commit, ~pr]
        steps:
            - gover: go version
            - install: go mod download
            - vet: go vet ./...
            - gofmt: (! gofmt -d . | grep '^')
            - test-setup: go get gotest.tools/gotestsum@v0.6.0
            - test: gotestsum --format testname --jsonfile ${SD_ARTIFACTS_DIR}/report.json -- -coverprofile=${SD_ARTIFACTS_DIR}/coverage.out ./...
            # Ensure we can compile
            - build: go build -a -o /dev/null
            # Test cross-compiling as well
            - test-release: "curl -sL https://git.io/goreleaser | bash -s -- --snapshot"
    publish:
        image: golang:1.17
        requires: main
        steps:
            - setup-ci: git clone https://github.com/screwdriver-cd/toolbox.git ci
            - get: go mod download
            - tag: ./ci/git-tag.sh
            - release: "curl -sL https://git.io/goreleaser | bash"
        secrets:
            # Pushing tags to Git
            - GIT_KEY
            # Pushing releases to GitHub
            - GITHUB_TOKEN
    docker-publish:
        environment:
            DOCKER_MULTI_PLATFORM_BUILDS_ENABLED: 1
        requires: publish
        template: sd/dind@latest
        steps:
            - build-push: |
                  docker login --username $DOCKER_REGISTRY_USER --password $DOCKER_REGISTRY_TOKEN
                  DOCKER_TAG=`cat VERSION`
                  if [[ $DOCKER_MULTI_PLATFORM_BUILDS_ENABLED -eq 1 ]]; then
                      for PLATFORM in ${DOCKER_TARGET_PLATFORMS//,/ }
                      do
                          ITEMS=(${PLATFORM//\// })
                          ARCH=${ITEMS[1]}
                          echo $PLATFORM $ARCH
                          docker buildx build --push --progress plain --platform $PLATFORM --cache-from $DOCKER_REPO:latest --build-arg BUILDKIT_INLINE_CACHE=1 ARCH=$ARCH $DOCKER_BUILD_EXTRA_FLAGS -t $DOCKER_REPO:latest -f $DOCKERFILE_NAME $DOCKERFILE_PATH
                          sleep 10
                          docker buildx build --push --progress plain --platform $PLATFORM --cache-from $DOCKER_REPO:latest --build-arg BUILDKIT_INLINE_CACHE=1 ARCH=$ARCH -t $DOCKER_REPO:$DOCKER_TAG -f $DOCKERFILE_NAME $DOCKERFILE_PATH
                      done
                  fi
